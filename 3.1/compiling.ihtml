<ol start="4">
<li>
In order to compile and install KDevelop on your system,
type the commands (we assume you have bash shell) from below in the base directory.
<dl>
<dd class="code">$ export KDEDIR=/where/your/kde3/is</dd>
<dd class="code">$ export QTDIR=/where/your/qt3/is</dd>
<dd class="code">$ export LD_LIBRARY_PATH=$QTDIR/lib:$KDEDIR/lib:$LD_LIBRARY_PATH</dd>
<dd class="code">$ export LIBRARY_PATH=$QTDIR/lib:$KDEDIR/lib:$LIBRARY_PATH</dd>
<dd class="code">$ export PATH=$QTDIR/bin:$KDEDIR/bin:$PATH</dd>
</dl>
<b>Note:</b> For obvious reasons you should edit the first two lines to match your configuration!<br>
On RPM based linux distributions, you can find the location of your Qt3 and KDE3 directories
using the configuration program of your linux distribuition or simply issuing "rpm -ql qt3" and "rpm -ql kdebase3".
</li>

<br>
<br>

<li>
The next step is to configure it,
to find out more about all the available configure options invoke:
<dl>
<dd class="code">$ ./configure --help</dd>
</dl>

Here is an example of a debug-compiled version:
<dl>
<dd class="code">$ ./configure --enable-debug=full --prefix=$KDEDIR --with-kdelibsdoxy-dir=$KDEDIR/share/doc/HTML/en/kdelibs-apidocs</dd>
</dl>

Here is an example of a release-compiled version:
<dl>
<dd class="code">$ ./configure --prefix=$KDEDIR --with-kdelibsdoxy-dir=$KDEDIR/share/doc/HTML/en/kdelibs-apidocs</dd>
</dl>

You can avoid compiling some KDevelop components that you do not need, for example, I use the following configure command:
<dl>
<dd class="code">$ ./configure --enable-debug=full --prefix=$KDEDIR --with-kdelibsdoxy-dir=$KDEDIR/share/doc/HTML/en/kdelibs-apidocs
--disable-ada --disable-bash --disable-fortran --disable-haskell --disable-java --disable-pascal --disable-perl
--disable-php --disable-python --disable-ruby --disable-sql --disable-antproject --disable-genericproject
--disable-scriptproject --disable-trollproject --disable-clearcase --disable-perforce --disable-subversion</dd>
</dl>
</li>

<li>
Finaly you can build it and install it:
<dl>
<dd class="code">$ make</dd>
<dd class="code">$ make install (as root, using for example the "su" command)</dd>
</dl>
If for some reason the make command fails you can force it to ignore
errors by adding the -k option like this:
<dl>
<dd class="code">$ make -k</dd>
<dd class="code">$ make -k install (as root)</dd>
</dl>
Depending on the error gravity you might
end up with a working or non-working version of kdevelop. So do the "make
-k install" at your own risk!!!.
</li></ol>

<p>You should report the bugs you find with the <a
href="http://bugs.kde.org/wizard.cgi">bug submition form</a>. You should <b>not</b> report
compilation errors to the bug database. For compilation errors use the
<a href="index.html?filename=mailinglist.html">mailing list</a> instead.</p>
