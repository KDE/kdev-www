<?php
// $Id: views_gallery.module,v 1.8 2009/12/01 19:41:49 karens Exp $

/**
 * @file
 * Creates photo gallery feature, including image and gallery content types.
 */

/**
 * The content types to use for the image and gallery.
 * 
 * Modules and profiles can alter these values
 * by doing varible_set() to change this value 
 * before installing this module.
 */
function views_gallery_image_type() {
  return variable_get('views_gallery_image_type', 'gallery_image');
}

function views_gallery_gallery_type() {
  return variable_get('views_gallery_gallery_type', 'gallery');
}

/**
 * Implementation of hook_menu().
 */
function views_gallery_menu() {
  $items = array();
  $items['admin/settings/views_gallery'] = array(
    'title' => 'Views Gallery',
    'description' => 'Configure the Views Gallery content types.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('views_gallery_settings_form'),
    'access arguments' => array('administer content types'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function views_gallery_settings_form() {
  $form = array();
  $options = node_get_types('names');
  $form['views_gallery_gallery_type'] = array(
    '#title' => t('Views Gallery Gallery Type'),
    '#description' => t('Set the content type that will be used for galleries.'),
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => views_gallery_gallery_type(),
    );  
  $form['views_gallery_image_type'] = array(
    '#title' => t('Views Gallery Image Type'),
    '#description' => t('Set the content type that will be used for gallery images.'),
    '#type' => 'select',
    '#options' => $options,
    '#default_value' => views_gallery_image_type(),
    );
  return system_settings_form($form);   
}

/**
 * Implementation of hook_views_api.
 */
function views_gallery_views_api() {
  return array(
    'api' => 2,
  );
}

/**
 * Implementation of hook_init().
 */
function views_gallery_init() {
  if (user_access('administer site configuration') && module_exists('imageapi') && !module_exists('imageapi_gd') && !module_exists('imageapi_imagemagick')) {
    drupal_set_message(t('Image API requires that an image toolkit be enabled before it will work! Please enable an image toolkit on the <a href="!link">modules page</a>.', array('!link' => url('admin/build/modules'))), 'error');
  }
  drupal_add_css(drupal_get_path('module', 'views_gallery') .'/views_gallery.css');
  if (module_exists('views_slideshow_singleframe')) {
    drupal_add_css(drupal_get_path('module', 'views_slideshow_singleframe') .'/views_slideshow_singleframe.css');  
  }
}

/**
 * Make sure image nodes are not added to 'all nodes' 
 * simpleviews listings, since we have a special gallery 
 * view to handle images.
 */
function views_gallery_simpleview_alter(&$view, $data) {
  if ($data['filter'] == 'all nodes' && $view->name != views_gallery_image_type()) {
    $display = $view->display['default'];

    $filters['type'] = array(
      'operator' => 'not in',
      'value' => array(views_gallery_image_type() => views_gallery_image_type()),
      'group' => '0',
      'exposed' => FALSE,
      'expose' => array('operator' => FALSE, 'label' => ''),
      'id' => 'type',
      'table' => 'node',
      'field' => 'type',
      'relationship' => 'none',
    );
    
    $display->handler->override_option('filters', $filters);
  }
}

/**
 * Helper to implemetation of hook_imagecache_default_presets().
 */
function views_gallery_imagecache_default_presets() {
  $items = array(
    'reg' => array(
      'presetname' => 'reg',
      'actions' => array(
        '0' => array(
          'actionid' => '2',
          'presetid' => '1',
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_deprecated_scale',
          'data' => array(
            'fit' => 'inside',
            'width' => '500',
            'height' => '1000',
          ),
        ),
      ),
    ),
    'short' => array(
      'presetname' => 'short',
      'actions' => array(
        '0' => array(
          'actionid' => '5',
          'presetid' => '3',
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_deprecated_scale',
          'data' => array(
            'fit' => 'outside',
            'width' => '150',
            'height' => '150',
          ),
        ),
        '1' => array(
          'actionid' => '6',
          'presetid' => '3',
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_crop',
          'data' => array(
            'width' => '150',
            'height' => '75',
            'xoffset' => 'center',
            'yoffset' => 'center',
          ),
        ),
      ),
    ),
    'thumb' => array(
      'presetname' => 'thumb',
      'actions' => array(
        '0' => array(
          'actionid' => '3',
          'presetid' => '2',
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_deprecated_scale',
          'data' => array(
            'fit' => 'outside',
            'width' => '200',
            'height' => '150',
          ),
        ),
        '1' => array(
          'actionid' => '4',
          'presetid' => '2',
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_crop',
          'data' => array(
            'width' => '200',
            'height' => '150',
            'xoffset' => 'center',
            'yoffset' => 'center',
          ),
        ),
      ),
    ),
    $presets['tiny'] = array (
      'presetname' => 'tiny',
      'actions' => 
      array (
        0 => 
        array (
          'weight' => '0',
          'module' => 'imagecache',
          'action' => 'imagecache_scale_and_crop',
          'data' => 
          array (
            'width' => '60',
            'height' => '60',
          ),
        ),
      ),
    ),  
  );
  return $items;
}

/**
 * Helper functions to add and delete pager.
 *
 */
function views_gallery_create_pager() {
  module_load_install('views_gallery');
  _views_gallery_create_pager();
}
function views_gallery_delete_pager() {
  module_load_install('views_gallery');
  _views_gallery_delete_pager();
}

/**
 * Implementation of hook_form_alter().
 */
function views_gallery_form_alter(&$form, $form_state, $form_id) {
  // If the custom pagers module is enabled, set the pager
  if ($form_id == 'system_modules') {
    if (module_exists('custom_pager')) {
      views_gallery_create_pager();
    }
  }
}